extends layout

block extraHeader
  script(src='https://cdnjs.cloudflare.com/ajax/libs/flot/0.8.3/jquery.flot.min.js')
  script(src='https://cdnjs.cloudflare.com/ajax/libs/flot/0.8.3/jquery.flot.time.min.js')
  script(src='https://cdnjs.cloudflare.com/ajax/libs/flot/0.8.3/jquery.flot.resize.min.js')
  script(src='http://flot.base.is/jquery.flot.downsample.js')
  script(src='https://rawgit.com/MichaelZinsmaier/CurvedLines/master/curvedLines.js')
  script.
    Number.prototype.round = function() {
          return Math.round(this);
    }

    function isNumber(obj) { 
        return !isNaN(parseFloat(obj)) 
    }

    function simple_moving_averager(period) {
        var nums = [];
        return function(num) {
            nums.push(num);
            if (nums.length > period)
                nums.splice(0,1);  // remove the first element of the array
            var sum = 0;
            for (var i in nums)
                sum += nums[i];
            var n = period;
            if (nums.length < period)
                n = nums.length;
            return(sum/n);
        }
    }

    function setTempAndColor(element, tempStr) {
        var temp = parseInt(tempStr);
        element.text(temp.round());
        if(temp < 35) {
            element.addClass('thirtyfive');
        } else if(temp < 40) {
            element.addClass('fourty');
        } else if(temp < 45) {
            element.addClass('fourtyfive');
        } else if(temp < 50) {
            element.addClass('fifty');
        } else if(temp < 55) {
            element.addClass('fiftyfive');
        } else if(temp < 60) {
            element.addClass('sixty');
        } else if(temp < 65) {
            element.addClass('sixtyfive');
        } else if(temp < 70) {
            element.addClass('seventy');
        } else if(temp < 75) {
            element.addClass('seventyfive');
        } else if(temp < 80) {
            element.addClass('eighty');
        } else if(temp < 85) {
            element.addClass('eightyfive');
        } else if(temp < 90) {
            element.addClass('ninety');
        } else {
            element.addClass('ninetyplus');
        }

    }

    function setBatteryAndColor(element, batteryStr) {
        var battery = parseInt(batteryStr);
        element.text(battery.round());
        if(battery < 20) {
            element.addClass('low');
        } else if(battery < 35) {
            element.addClass('warn');
        } else {
            element.addClass('good');
        }

    }

    $(function() {
      var d = new Date();
      d.setDate(d.getDate() - 1);
      $.ajax({
        url: "/api/temps/since",
        data: {st: d.getTime()}
      }).done(function( wrapper ) {

        var values = [];

        var data = wrapper.data;

        for(var i=0; i<data.length; i++) {
            // normalize the names temporarily
            if(data[i].name == "thermostat") {
                data[i].name = "thermostat-temp";
            }
            if(data[i].name == "battery") {
                data[i].name = "thermostat-battery-level";
            }

            if(!values.hasOwnProperty(data[i].name)) {
                values[data[i].name] = [];
            }
            if(data[i].name == "thermostat-temp" && data[i].value == -999) {
                values[data[i].name].push([data[i].timestamp, null]);
            } else {
                values[data[i].name].push([data[i].timestamp, data[i].value]);
            }
        }

        //- var tempData = [];
        //- var smaTemp = simple_moving_averager(6);
        //- for(var i=0;i<values['tempF'].length;i++) {
        //-     var t = parseFloat(values['tempF'][i][1]);
        //-     var s = values['tempF'][i][0];
        //-     var tAvg = smaTemp(t);
        //-     tempData.push([s, tAvg]);
        //- }
        //- tempData = tempData.reverse();

        var markings = [];
        var tStates = values['thermostat-state'];
        
        tStates.sort(function(a,b) {
          if (a[0] < b[0])
            return -1;
          else if (a[0] > b[0])
            return 1;
          else 
            return 0;
        });
        for(var i=0; i<tStates.length; i++) {
            if(tStates[i][1] == "on") {
                if(i<tStates.length-1 && tStates[i+1][1] == "off") {
                    markings.push({xaxis: {from: tStates[i][0], to: tStates[++i][0]}, color: "#FA9E00"});
                } else {
                    markings.push({xaxis: {from: tStates[i][0]}, color: "#FA9E00"});
                }
            } else {
                markings.push({xaxis: {to: tStates[i][0]}, color: "#FA9E00"});
            }
        }

        $.plot($("#placeholder"), 
        [
            {
                label: "Temperature (&deg;F)",
                data: values['tempF']
                //- ,
                //- curvedLines: {
                //-     apply: true
                //- }
            },
            {
                label: "Dewpoint (&deg;F)",
                data: values['dewpoint']
                //- ,
                //- curvedLines: {
                //-     apply: true
                //- }
            },
            {
                label: "Humidity (%)",
                data: values['humidity'],
                yaxis: 2
                //- ,
                //- curvedLines: {
                //-     apply: true
                //- }
            },
            {
                label: "Battery Level (%)",
                data: values['thermostat-battery-level'],
                yaxis: 2
                //- ,
                //- curvedLines: {
                //-     apply: true
                //- }
            },
            {
                label: "Thermostat Temp (&deg;F)",
                data: values['thermostat-temp']
                //- ,
                //- curvedLines: {
                //-     apply: true
                //- }
            }
        ],
        {
            yaxes: [
                {
                    tickFormatter: function(v) {
                        return v + "&deg;F";
                    },
                    tickDecimals: 0
                }, 
                {
                    position: "right",
                    min: 0, max: 102,
                    tickFormatter: function(v) {
                        return v + "%";
                    },
                    tickDecimals: 0
                }
            ], 
            xaxis: {
              mode: "time",
              timezone: "browser",
              twelveHourClock: true
              //- ,
              //- timeformat: "%a %I%p"
            },
            legend: {
                position: "sw"
            },
            grid: {
                markings: markings
            },
            series: {
                //- downsample: { 
                //-     threshold: 56 
                //- },
                //- curvedLines: {
                //-     active: true,
                //-     nrSplinePoints: 50 // <- control nr of helper points
                //- }    
            }
        });

        $('#placeholder').resize(function () {
            console.log("Placeholder is now "
                + $(this).width() + "x" + $(this).height()
                + " pixels");
        });

        setTempAndColor($('#current_indoor .temp'),  values["tempF"][0][1]);
        setBatteryAndColor($('#current_battery_level .battery'),  values["thermostat-battery-level"][0][1]);
      });
    });

block content
  section(id='current_temps_section')
    div(id='current_temps_wrapper')
      div(id='current_indoor', class='current_temp')
        p(class='temp_label') Indoor Temp
        p(class='temp') -
      div(id='current_battery_level', class='current_battery')
        p(class='battery_label') Battery Level
        p(class='battery') -
  div(id='placeholder' style="width:100%;height:300px")